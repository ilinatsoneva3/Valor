@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        <a href="authentication/profile">Hello, @UserName!</a>
        <button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/register">Register</a>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{
    [CascadingParameter] Task<AuthenticationState> authenticationStateTask { get; set; }

    public string UserName { get; set; }

    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    protected override async Task OnParametersSetAsync()
    {
        var AuthState = await authenticationStateTask;
        var user = AuthState.User;

        if (user.Identity.IsAuthenticated)
        {
            UserName = user.Identity.Name.Substring(0, user.Identity.Name.IndexOf("@"));
        }
    }
}
